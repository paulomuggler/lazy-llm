#!/usr/bin/env bash
# llm-append - Appends text to prompt pane without clearing or submitting
# Usage: llm-append [--raw] "text to append"
#   --raw: insert inline without extra newlines

set -euo pipefail

# Parse flags
RAW_MODE=false
if [[ "${1:-}" == "--raw" ]]; then
  RAW_MODE=true
  shift
fi

# Get PROMPT_PANE from window-scoped tmux user option
# Use $TMUX_PANE to determine current window
PROMPT_PANE=""
if [ -n "${TMUX_PANE:-}" ]; then
  # Get session and window from current pane
  _session=$(tmux display-message -t "${TMUX_PANE}" -p '#S' 2>/dev/null)
  _window=$(tmux display-message -t "${TMUX_PANE}" -p '#I' 2>/dev/null)

  if [ -n "$_session" ] && [ -n "$_window" ]; then
    # Retrieve window-scoped user option
    PROMPT_PANE=$(tmux show-option -wv -t "$_session:$_window" @PROMPT_PANE 2>/dev/null)
  fi
fi

# Fallback to pane 2 (bottom pane) if still not set
TARGET="${PROMPT_PANE:-:.2}"

# CRITICAL: Exit copy-mode if pane is scrolled up
tmux send-keys -t "$TARGET" -X cancel 2>/dev/null || true

# Ensure nvim is in insert mode before sending text
tmux send-keys -t "$TARGET" Escape

if [[ "$RAW_MODE" == "true" ]]; then
  # Raw mode: append at end of current line, insert text inline
  tmux send-keys -t "$TARGET" A
  tmux send-keys -t "$TARGET" "$1"
else
  # Wrapped mode: ensure we're on a new line with spacing
  # 'A' to go to end of line, Enter to create new line, Enter for blank line
  tmux send-keys -t "$TARGET" A
  tmux send-keys -t "$TARGET" "" Enter
  tmux send-keys -t "$TARGET" "" Enter
  tmux send-keys -t "$TARGET" "$1"
  tmux send-keys -t "$TARGET" "" Enter
fi
