#!/usr/bin/env bash
# llm-pull - Extract latest LLM response from AI pane
# Outputs response content to stdout for consumption by nvim

set -euo pipefail

# Get AI_PANE from window-scoped tmux user option
# Use $TMUX_PANE to determine current window
AI_PANE=""
if [ -n "${TMUX_PANE:-}" ]; then
  # Get session and window from current pane
  _session=$(tmux display-message -t "${TMUX_PANE}" -p '#S' 2>/dev/null)
  _window=$(tmux display-message -t "${TMUX_PANE}" -p '#I' 2>/dev/null)

  if [ -n "$_session" ] && [ -n "$_window" ]; then
    # Retrieve window-scoped user option
    AI_PANE=$(tmux show-option -wv -t "$_session:$_window" @AI_PANE 2>/dev/null)
  fi
fi

# Fallback to pane 0 (AI pane) if still not set
TARGET="${AI_PANE:-:.0}"

# Exit copy-mode if active (handles scrolled-up pane)
tmux send-keys -t "$TARGET" -X cancel 2>/dev/null || true

# Capture pane with history (last 2000 lines should be plenty)
# -J flag joins wrapped lines back into logical lines (prevents line-wrap duplication)
content=$(tmux capture-pane -t "$TARGET" -p -J -S -2000)

# Extract latest response - everything after the last ### END PROMPT marker
# Strategy:
# 1. Find line number of last ### END PROMPT (exact match only)
# 2. Extract all lines after that line number

# Find last ### END PROMPT line number (match only standalone lines to avoid false matches)
# -x = match entire line, [[:space:]]* = optional whitespace
last_end=$(echo "$content" | grep -nx "[[:space:]]*### END PROMPT[[:space:]]*" | tail -1 | cut -d: -f1)

if [ -z "$last_end" ]; then
  echo "No ### END PROMPT marker found in AI pane" >&2
  exit 1
fi

# Extract everything after that line (tail -n +N starts at line N)
response=$(echo "$content" | tail -n +$((last_end + 1)))

# Response might be empty if AI hasn't responded yet (just output empty string)
# This is not an error - nvim plugin will handle empty responses appropriately

# Optional: Strip ANSI escape codes for cleaner output
# Uncomment if responses have color codes that interfere
# response=$(echo "$response" | sed 's/\x1b\[[0-9;]*m//g')

# Output to stdout
echo "$response"
